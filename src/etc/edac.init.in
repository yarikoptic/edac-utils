#!/bin/sh
###############################################################################
# $Id: edac.init.in 61 2007-06-20 21:43:08Z grondo $
###############################################################################
# Copyright (C) 2006-2007 The Regents of the University of California.
# Produced at Lawrence Livermore National Laboratory.
# Written by Mark Grondona <mgrondona@llnl.gov>
# UCRL-CODE-230739.
# Modified by Yaroslav Halchenko <debian@onerussian.com> 2007
###############################################################################
# chkconfig:      345 40 60
###############################################################################
### BEGIN INIT INFO
# Provides:       edac
# Required-Start: $named $time
# Default-Start:  3 5
# Default-Stop:   0 1 2 6
# Short-Description: Initialize EDAC drivers for machine hardware
# Description:    Initialize EDAC drivers for machine hardware
### END INIT INFO
###############################################################################

SERVICE="edac"
DESC="Error Detection and Correction"
prefix="@prefix@"
exec_prefix="@exec_prefix@"
sbindir="@sbindir@"

PATH=/sbin:/usr/sbin:/usr/local/sbin:/bin:/usr/bin:/usr/local/bin
EDAC="$sbindir/edac-ctl"

###############################################################################

# Load the VERBOSE setting and other rcS variables
. /lib/init/vars.sh

# Define LSB log_* functions.
. /lib/lsb/init-functions

###############################################################################

service_start ()
{
# Start the service.  Required by LSB.
#
  log_daemon_msg "Starting $DESC" "${SERVICE} "
  msg1=`$EDAC --quiet --load 2>&1`
  rc=$?
  msg2=`$EDAC --register-labels`
  echo "rc=$rc"
  case $rc in
	0) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
    5) log_failure_msg ": No EDAC support for this hardware"; log_end_msg 1 ;;
    *) log_failure_msg ": Unknown return code $rc. Please file a bug report"; log_end_msg 1;;
  esac

}

###############################################################################

service_stop ()
{
  log_daemon_msg "Stopping $DESC" "${SERVICE}"
  $EDAC --unload
  rc=$?
  case "$?" in
	0) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
	*) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
  esac
}

###############################################################################

service_status ()
{
# Print the current status of the service.  Required by LSB.
#
  log_daemon_msg "Status of $DESC"
  $EDAC --status
  rc=0
}

###############################################################################

rc=4

case "$1" in
  start)
    service_start
    ;;
  stop)
    service_stop
    ;;
  status)
    service_status
    ;;
  restart|force-reload)
	service_stop
	sleep 1
	service_start
	;;
  *)
    COMMANDS="{start|stop|status|restart|force-reload}"
    echo "Usage: $0 {${COMMANDS}}" >&2
    exit 3
    ;;
esac
